<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>css只展示图片指定部分的内容</title>
    <url>/2023/06/26/css%E5%8F%AA%E5%B1%95%E7%A4%BA%E5%9B%BE%E7%89%87%E6%8C%87%E5%AE%9A%E9%83%A8%E5%88%86%E7%9A%84%E5%86%85%E5%AE%B9/</url>
    <content><![CDATA[<h2 id="css-只展示图片指定部分的内容"><a href="#css-只展示图片指定部分的内容" class="headerlink" title="css 只展示图片指定部分的内容"></a>css 只展示图片指定部分的内容</h2><h5 id="1、使用-background-position-属性"><a href="#1、使用-background-position-属性" class="headerlink" title="1、使用 background-position 属性"></a>1、使用 <code>background-position </code>属性</h5><p>可以使用 CSS 的 <code>background</code> 属性将图片设置为元素的背景，并使用 <code>background-position</code> 属性来控制要显示的部分。</p>
<p>下面是一个示例 CSS 代码块，展示了如何将图片的左上角部分设置为元素的背景，然后将其向右下方移动 50 像素：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;your-image.jpg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这将创建一个宽度为 200 像素、高度为 200 像素的 <code>div</code> 元素，并将其背景设置为 <code>your-image.jpg</code>。<code>background-repeat</code> 属性设置为 <code>no-repeat</code> 表示图片不应该被重复显示。最后，<code>background-position</code> 属性将图片向右下方移动了 50 像素。你可以根据需要调整 <code>background-position</code> 属性的值来控制要显示的部分。</p>
<h5 id="2、使用-clip-属性"><a href="#2、使用-clip-属性" class="headerlink" title="2、使用 clip 属性"></a>2、使用 <code>clip</code> 属性</h5><p>通过设置四个参数来裁剪元素的显示区域，从而控制要显示的部分。</p>
<p>下面是一个示例 CSS 代码块，展示了如何将图片的左上角部分设置为元素的显示区域，然后将其移动到页面的左上角：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">0px</span>, <span class="number">50px</span>, <span class="number">50px</span>, <span class="number">0px</span>);</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这将创建一个 img 元素，并将其设置为绝对定位。clip 属性的参数使用 rect 函数来设置，其中第一个参数是裁剪区域的顶部位置，第二个参数是右侧位置，第三个参数是底部位置，第四个参数是左侧位置。在这个示例中，我们将裁剪区域设置为图片的左上角部分，因此其顶部位置为 0 像素，右侧位置为 50 像素，底部位置为 50 像素，左侧位置为 0 像素。top 和 left 属性将图片移动到页面的左上角。</p>
<p>你可以根据需要调整 clip 属性的值来控制要显示的部分。注意，clip 属性只适用于绝对定位的元素。</p>
<h5 id="3、使用-object-position-属性"><a href="#3、使用-object-position-属性" class="headerlink" title="3、使用 object-position 属性"></a>3、使用 <code>object-position</code> 属性</h5><p>下面是一个示例 CSS 代码块，展示了如何将图片的左上角部分设置为 <code>img</code> 元素的显示区域：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: none;</span><br><span class="line">  <span class="attribute">object-position</span>: <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这将创建一个宽度为 200 像素、高度为 200 像素的 <code>img</code> 元素，并将其 <code>object-fit</code> 属性设置为 <code>none</code>，以防止图片被缩放。<code>object-position</code> 属性将图片的左上角设置为 <code>img</code> 元素的显示区域，从而只显示图片的左上角部分。</p>
<p>你可以根据需要调整 <code>object-position</code> 属性的值来控制要显示的部分。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 el-dialog 里嵌套 tabs，导致关闭 dialog 时浏览器卡死问题</title>
    <url>/2023/06/26/%E4%BD%BF%E7%94%A8%20el-dialog%20%E9%87%8C%E5%B5%8C%E5%A5%97%20tabs%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%85%B3%E9%97%AD%20dialog%20%E6%97%B6%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8D%A1%E6%AD%BB%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="使用-el-dialog-里嵌套-tabs，导致关闭-dialog-时浏览器卡死问题"><a href="#使用-el-dialog-里嵌套-tabs，导致关闭-dialog-时浏览器卡死问题" class="headerlink" title="使用 el-dialog 里嵌套 tabs，导致关闭 dialog 时浏览器卡死问题"></a>使用 el-dialog 里嵌套 tabs，导致关闭 dialog 时浏览器卡死问题</h2><p><em>解决办法：</em></p>
<ul>
<li>给 tab 添加 v-if ，判断条件与 dialog 的 visible 属性值一致</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;linkSelecterShow&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-tabs</span> <span class="attr">v-model</span>=<span class="string">&quot;activeName&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;linkSelecterShow&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tab-pane</span> <span class="attr">label</span>=<span class="string">&quot;用户管理&quot;</span> <span class="attr">name</span>=<span class="string">&quot;first&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">el-tab-pane</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tab-pane</span> <span class="attr">label</span>=<span class="string">&quot;配置管理&quot;</span> <span class="attr">name</span>=<span class="string">&quot;second&quot;</span>&gt;</span>配置管理<span class="tag">&lt;/<span class="name">el-tab-pane</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tab-pane</span> <span class="attr">label</span>=<span class="string">&quot;角色管理&quot;</span> <span class="attr">name</span>=<span class="string">&quot;third&quot;</span>&gt;</span>角色管理<span class="tag">&lt;/<span class="name">el-tab-pane</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tab-pane</span> <span class="attr">label</span>=<span class="string">&quot;定时任务补偿&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fourth&quot;</span>&gt;</span>定时任务补偿<span class="tag">&lt;/<span class="name">el-tab-pane</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-tabs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Element-ui</tag>
        <tag>el-dialog</tag>
      </tags>
  </entry>
  <entry>
    <title>写了个vscode插件，用于vscode内查看技术文档</title>
    <url>/2023/06/27/%E5%86%99%E4%BA%86%E4%B8%AAvscode%E6%8F%92%E4%BB%B6%EF%BC%8C%E7%94%A8%E4%BA%8Evscode%E5%86%85%E6%9F%A5%E7%9C%8B%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="OPEN-THE-DOC"><a href="#OPEN-THE-DOC" class="headerlink" title="OPEN THE DOC"></a>OPEN THE DOC</h2><p>作为一名优雅的 CV 工程师，切屏 CV 显然多少有些不雅（主要是懒 🤣），要是能在 vscode 直接打开文档就好了。于是乎，这个叫“Open The Doc”的小插件应运而生。</p>
<hr>
<p>下载：vscode 插件库搜索“Open The Doc”，或者也可以<a href="https://marketplace.visualstudio.com/items?itemName=Ghosts.open-the-doc&ssr=false#overview">点这</a>去下载</p>
<p>Visual Studio Marketplace：<a href="https://marketplace.visualstudio.com/items?itemName=Ghosts.open-the-doc&ssr=false#review-details">https://marketplace.visualstudio.com</a></p>
<p>GitHub：<a href="https://github.com/Ag0v0/open-the-doc">https://github.com/Ag0v0/open-the-doc</a></p>
<hr>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>前端使用浏览器的本地存储功能来保存网页数据到本地</title>
    <url>/2023/06/26/%E5%89%8D%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%8A%9F%E8%83%BD%E6%9D%A5%E4%BF%9D%E5%AD%98%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
    <content><![CDATA[<h2 id="前端使用浏览器的本地存储功能来保存网页数据到本地。"><a href="#前端使用浏览器的本地存储功能来保存网页数据到本地。" class="headerlink" title="前端使用浏览器的本地存储功能来保存网页数据到本地。"></a>前端使用浏览器的本地存储功能来保存网页数据到本地。</h2><p>下面是一些可用的方法：</p>
<p>1、使用 localStorage 或 sessionStorage API 将数据保存在浏览器的缓存中。这种方式只能保存较小量的数据，通常用于缓存一些用户偏好设置、表单数据等</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 保存数据到 localStorage</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 localStorage 中的数据</span></span><br><span class="line"><span class="keyword">const</span> data = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;key&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除 localStorage 中的数据</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;key&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>2、使用 Web Storage API 将数据保存在浏览器的文件系统中。这种方式可以保存更大量的数据，并且具有更好的安全性和可靠性，但需要获取用户权限才能使用。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 请求用户授权</span></span><br><span class="line">navigator.<span class="property">storage</span>.<span class="title function_">requestPersistent</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">granted</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (granted) &#123;</span><br><span class="line">    <span class="comment">// 保存数据到文件系统中</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">caches</span>.<span class="title function_">open</span>(<span class="string">&quot;data&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">cache</span>) =&gt;</span> &#123;</span><br><span class="line">      cache.<span class="title function_">put</span>(<span class="string">&quot;/&quot;</span>, <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&quot;data&quot;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取保存在文件系统中的数据</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">caches</span></span><br><span class="line">  .<span class="title function_">match</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="title function_">text</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<p>3、使用 File System Access API 将数据保存为本地文件。这种方式可以保存任意类型和大小的数据，并且用户不需要手动选择文件保存位置，但仅在最新版本的 Chrome 浏览器中可用。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 请求用户授权</span></span><br><span class="line"><span class="keyword">const</span> fileHandle = <span class="keyword">await</span> <span class="variable language_">window</span>.<span class="title function_">showSaveFilePicker</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建文件写入流</span></span><br><span class="line"><span class="keyword">const</span> writableStream = <span class="keyword">await</span> fileHandle.<span class="title function_">createWritable</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将数据写入文件</span></span><br><span class="line"><span class="keyword">await</span> writableStream.<span class="title function_">write</span>(<span class="string">&quot;data&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭文件写入流</span></span><br><span class="line"><span class="keyword">await</span> writableStream.<span class="title function_">close</span>();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>本地存储</tag>
      </tags>
  </entry>
  <entry>
    <title>处理canvas使用外部字体，外部字体加载不及时</title>
    <url>/2023/06/26/%E5%A4%84%E7%90%86canvas%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E5%AD%97%E4%BD%93%EF%BC%8C%E5%A4%96%E9%83%A8%E5%AD%97%E4%BD%93%E5%8A%A0%E8%BD%BD%E4%B8%8D%E5%8F%8A%E6%97%B6/</url>
    <content><![CDATA[<h2 id="处理-canvas-使用外部字体，外部字体加载不及时"><a href="#处理-canvas-使用外部字体，外部字体加载不及时" class="headerlink" title="处理 canvas 使用外部字体，外部字体加载不及时"></a>处理 canvas 使用外部字体，外部字体加载不及时</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> font = <span class="keyword">new</span> <span class="title class_">FontFace</span>(</span><br><span class="line">      <span class="string">&quot;字体名称&quot;</span>,</span><br><span class="line">      <span class="string">`url(<span class="subst">$&#123;<span class="built_in">require</span>(<span class="string">&quot;字体路径&quot;</span>)&#125;</span>)`</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">await</span> font.<span class="title function_">load</span>();</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">fonts</span>.<span class="title function_">add</span>(font);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">fonts</span>.<span class="property">ready</span>.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 字体加载完成执行的代码</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>实现锯齿边框的糖纸</title>
    <url>/2023/06/26/%E5%AE%9E%E7%8E%B0%E9%94%AF%E9%BD%BF%E8%BE%B9%E6%A1%86%E7%9A%84%E7%B3%96%E7%BA%B8/</url>
    <content><![CDATA[<h2 id="实现锯齿边框的糖纸"><a href="#实现锯齿边框的糖纸" class="headerlink" title="实现锯齿边框的糖纸"></a>实现锯齿边框的糖纸</h2><blockquote>
<p>先创建个容器，作为糖纸的主体</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 糖纸 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>接下来就是 CSS 部分了。</p>
<blockquote>
<p>设置下糖纸的宽高，再让它居中一下。后面子元素要用到绝对定位，所以先加上相对定位。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>我们得给糖纸加个靓一点的背景图</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="comment">/* 背景图和渐变的滤镜 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../img/bg.jpeg</span>) no-repeat, <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#ff3479</span>, <span class="number">#ffc107</span>);</span><br><span class="line">  <span class="comment">/* 设置背景图的融合方式 */</span></span><br><span class="line">  <span class="attribute">background-blend-mode</span>: soft-light;</span><br><span class="line">  <span class="comment">/* 背景图尺寸和定位 */</span></span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看下效果。<br>嗯。。。这糖看起来会很酸<br><img src="https://img-blog.csdnimg.cn/20210401211702311.png" alt="在这里插入图片描述" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>好了现在到重点的地方了——锯齿边框。</p>
<blockquote>
<p>用 CSS 伪元素的方式给糖纸添加边框</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 上边框 */</span></span><br><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="comment">/* 定位到左上角 */</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="comment">/* 宽度设置与父元素相等,再设置一个高度 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>锯齿是显示一格空一格，我们可以利用 CSS 渐变来实现</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">		1、透明一格，再用白色覆盖一格。并让它X轴方向平铺</span></span><br><span class="line"><span class="comment">		2、渐变方向设置成45°</span></span><br><span class="line"><span class="comment">		3、设置背景的大小</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, transparent <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">66.66%</span>, transparent <span class="number">66.66%</span>) repeat-x;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20210401215249648.png" alt="在这里插入图片描述" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<blockquote>
<p>再加上一个-45° 的渐变，让它形成小三角形（锯齿状）。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, transparent <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">66.66%</span>, transparent <span class="number">66.66%</span>) repeat-x， <span class="built_in">linear-gradient</span>(</span><br><span class="line">      -<span class="number">45deg</span>,</span><br><span class="line">      transparent <span class="number">33.33%</span>,</span><br><span class="line">      <span class="number">#fff</span> <span class="number">33.33%</span>,</span><br><span class="line">      <span class="number">#fff</span> <span class="number">66.66%</span>,</span><br><span class="line">      transparent <span class="number">66.66%</span></span><br><span class="line">    )</span><br><span class="line">    repeat-x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20210401215811598.png" alt="在这里插入图片描述" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<blockquote>
<p>伪元素整体旋转 180°，让锯齿向外。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20210401220027879.png" alt="在这里插入图片描述" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br>Nice! 上边框完成！</p>
<p>接着是下边框。</p>
<blockquote>
<p>其实下边框也是一样的方法。我们只需要再添加个伪元素，把它定位到底部；<br>下面的锯齿默认就是朝下的，所以就不需要旋转伪元素了。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, transparent <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">66.666%</span>, transparent <span class="number">66.666%</span>) repeat-x, <span class="built_in">linear-gradient</span>(</span><br><span class="line">        -<span class="number">45deg</span>,</span><br><span class="line">        transparent <span class="number">33.33%</span>,</span><br><span class="line">        <span class="number">#fff</span> <span class="number">33.33%</span>,</span><br><span class="line">        <span class="number">#fff</span> <span class="number">66.666%</span>,</span><br><span class="line">        transparent <span class="number">66.666%</span></span><br><span class="line">      ) repeat-x;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最终效果：<br><img src="https://img-blog.csdnimg.cn/2021040122070366.png" alt="在这里插入图片描述" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p><strong>以下为源码</strong>：</p>
<blockquote>
<p>HTML 部分</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>实现锯齿边框的糖纸<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 糖纸 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>CSS 部分</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 简单重置一下默认样式 */</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** 糖纸样式 ***/</span></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../img/bg.jpeg</span>) no-repeat, <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#ff3479</span>, <span class="number">#ffc107</span>);</span><br><span class="line">  <span class="attribute">background-blend-mode</span>: soft-light;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** 上边框 ***/</span></span><br><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, transparent <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">66.66%</span>, transparent <span class="number">66.66%</span>) repeat-x, <span class="built_in">linear-gradient</span>(</span><br><span class="line">        -<span class="number">45deg</span>,</span><br><span class="line">        transparent <span class="number">33.33%</span>,</span><br><span class="line">        <span class="number">#fff</span> <span class="number">33.33%</span>,</span><br><span class="line">        <span class="number">#fff</span> <span class="number">66.66%</span>,</span><br><span class="line">        transparent <span class="number">66.66%</span></span><br><span class="line">      ) repeat-x;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** 下边框 ***/</span></span><br><span class="line"><span class="selector-tag">section</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, transparent <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">66.666%</span>, transparent <span class="number">66.666%</span>), <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, transparent <span class="number">33.33%</span>, <span class="number">#fff</span></span><br><span class="line">        <span class="number">33.33%</span>, <span class="number">#fff</span> <span class="number">66.666%</span>, transparent <span class="number">66.666%</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完毕</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
</search>
